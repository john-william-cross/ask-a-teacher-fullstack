{"ast":null,"code":"var _jsxFileName = \"/Users/johncross/Desktop/10xCodeCamp/ask-a-teacher-fullstack/client/src/component/pages/SubmitQuestion.js\";\nimport React from \"react\";\nimport Header from \"../ui/Header\";\nimport Footer from \"../ui/Footer\";\nimport { checkQuestionIsOver, QUESTION_MAX_CARD_CHARS } from \"../../utils/helpers\";\nimport classnames from \"classnames\";\nimport { withRouter } from \"react-router-dom\";\n\nclass SubmitQuestion extends React.Component {\n  //we can set the state in constructor\n  constructor(props) {\n    super(props);\n    this.state = {\n      emailError: \"\",\n      passwordError: \"\",\n      hasEmailError: false,\n      questionInput: \"\"\n    };\n  }\n\n  setQuestionInput(e) {\n    this.setState({\n      questionInput: e.target.value\n    });\n  }\n\n  checkQuestionIsOver() {\n    if (this.state.questionInput.length > QUESTION_MAX_CARD_CHARS || this.state.questionInput.length === 0) {\n      return true;\n    } else return false;\n  }\n\n  setEmailState() {\n    console.log(`validate me`);\n    const emailInput = document.getElementById(\"questioner-email-input\").value;\n    const lowerCasedEmailInput = emailInput.toLowerCase(); // eslint-disable-next-line\n\n    const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (emailInput === \"\") this.setState({\n      emailError: \"Please enter your email address.\",\n      hasEmailError: true\n    });else if (emailRegex.test(lowerCasedEmailInput) === false) {\n      console.log(\"not a valid email\");\n      this.setState({\n        emailError: \"Please enter a valid email address.\",\n        hasEmailError: true\n      });\n    } else {\n      this.setState({\n        emailError: \"\",\n        hasEmailError: false\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container mb-9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-8 no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pressed-submit mt-6 col-12 col-xl-6 offset-xl-3 col-lg-8 offset-lg-2 col-md-10 offset-md-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"lead mb-3 mt-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 22\n      }\n    }, \"What's your question?\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"form-control form-control-lg mt-5\",\n      id: \"question-input\",\n      rows: \"10\",\n      autoFocus: true,\n      onChange: e => this.setQuestionInput(e),\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-muted float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classnames({\n        \"text-danger\": checkQuestionIsOver(this.state.questionInput, QUESTION_MAX_CARD_CHARS)\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, this.state.questionInput.length, \"/\", QUESTION_MAX_CARD_CHARS)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 22\n      }\n    }, \"Enter your email\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"questioner-email-input\",\n      className: classnames({\n        \"form-control\": true,\n        \"form-control-lg\": true,\n        \"is-invalid\": this.state.emailError\n      }),\n      type: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 22\n      }\n    }), this.state.hasEmailError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, this.state.emailError), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger mb-4\",\n      id: \"questioner-email-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-6 text-center col-12 col-xl-6 offset-xl-3 col-lg-8 offset-lg-2 col-md-10 offset-md-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      to: \"/\",\n      className: classnames(\"logo-text-font submit-question-button btn btn-lg btn-outline-secondary mb-8\", {\n        disabled: this.checkQuestionIsOver()\n      }),\n      id: \"ask-a-teacher-submit-button\",\n      type: \"submit\",\n      value: \"Ask a teacher\",\n      onClick: () => {\n        this.setEmailState();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }, \"Ask a Teacher\"))))), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default withRouter(SubmitQuestion);","map":{"version":3,"sources":["/Users/johncross/Desktop/10xCodeCamp/ask-a-teacher-fullstack/client/src/component/pages/SubmitQuestion.js"],"names":["React","Header","Footer","checkQuestionIsOver","QUESTION_MAX_CARD_CHARS","classnames","withRouter","SubmitQuestion","Component","constructor","props","state","emailError","passwordError","hasEmailError","questionInput","setQuestionInput","e","setState","target","value","length","setEmailState","console","log","emailInput","document","getElementById","lowerCasedEmailInput","toLowerCase","emailRegex","test","render","width","disabled"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Header from \"../ui/Header\";\nimport Footer from \"../ui/Footer\";\n\nimport {\n   checkQuestionIsOver,\n   QUESTION_MAX_CARD_CHARS,\n} from \"../../utils/helpers\";\nimport classnames from \"classnames\";\nimport { withRouter } from \"react-router-dom\";\n\nclass SubmitQuestion extends React.Component {\n   //we can set the state in constructor\n   constructor(props) {\n      super(props);\n      this.state = {\n         emailError: \"\",\n         passwordError: \"\",\n         hasEmailError: false,\n         questionInput: \"\",\n      };\n   }\n   setQuestionInput(e) {\n      this.setState({ questionInput: e.target.value });\n   }\n\n   checkQuestionIsOver() {\n      if (\n         this.state.questionInput.length > QUESTION_MAX_CARD_CHARS ||\n         this.state.questionInput.length === 0\n      ) {\n         return true;\n      } else return false;\n   }\n\n   setEmailState() {\n      console.log(`validate me`);\n      const emailInput = document.getElementById(\"questioner-email-input\")\n         .value;\n      const lowerCasedEmailInput = emailInput.toLowerCase();\n\n      // eslint-disable-next-line\n      const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n      if (emailInput === \"\")\n         this.setState({\n            emailError: \"Please enter your email address.\",\n            hasEmailError: true,\n         });\n      else if (emailRegex.test(lowerCasedEmailInput) === false) {\n         console.log(\"not a valid email\");\n         this.setState({\n            emailError: \"Please enter a valid email address.\",\n            hasEmailError: true,\n         });\n      } else {\n         this.setState({ emailError: \"\", hasEmailError: false });\n      }\n   }\n\n   render() {\n      return (\n         <>\n            <Header />\n            <div className=\"container mb-9\">\n               <div className=\"row mt-8 no-gutters\">\n                  <div className=\"pressed-submit mt-6 col-12 col-xl-6 offset-xl-3 col-lg-8 offset-lg-2 col-md-10 offset-md-1\">\n                     <h1 className=\"lead mb-3 mt-6\">What's your question?</h1>\n                     <textarea\n                        className=\"form-control form-control-lg mt-5\"\n                        id=\"question-input\"\n                        rows=\"10\"\n                        autoFocus\n                        onChange={(e) => this.setQuestionInput(e)}\n                        style={{ width: \"100%\" }}\n                     ></textarea>\n                     <p className=\"text-muted float-right\">\n                        <span\n                           className={classnames({\n                              \"text-danger\": checkQuestionIsOver(\n                                 this.state.questionInput,\n                                 QUESTION_MAX_CARD_CHARS\n                              ),\n                           })}\n                        >\n                           {this.state.questionInput.length}/\n                           {QUESTION_MAX_CARD_CHARS}\n                        </span>\n                     </p>\n\n                     <p className=\"lead mt-5\">Enter your email</p>\n\n                     <input\n                        id=\"questioner-email-input\"\n                        className={classnames({\n                           \"form-control\": true,\n                           \"form-control-lg\": true,\n                           \"is-invalid\": this.state.emailError,\n                        })}\n                        type=\"email\"\n                     />\n                     {this.state.hasEmailError && (\n                        <p className=\"text-danger\">{this.state.emailError}</p>\n                     )}\n\n                     <p\n                        className=\"text-danger mb-4\"\n                        id=\"questioner-email-error\"\n                     ></p>\n\n                     <div className=\"mt-6 text-center col-12 col-xl-6 offset-xl-3 col-lg-8 offset-lg-2 col-md-10 offset-md-1\">\n                        {/* Do we need this to be a link? How can we make it work so email error fires if it's a link?  */}\n                        <button\n                           to=\"/\"\n                           className={classnames(\n                              \"logo-text-font submit-question-button btn btn-lg btn-outline-secondary mb-8\",\n                              { disabled: this.checkQuestionIsOver() }\n                           )}\n                           id=\"ask-a-teacher-submit-button\"\n                           type=\"submit\"\n                           value=\"Ask a teacher\"\n                           onClick={() => {\n                              this.setEmailState();\n                           }}\n                        >\n                           Ask a Teacher\n                        </button>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <Footer />\n         </>\n      );\n   }\n}\nexport default withRouter(SubmitQuestion);\n"]},"metadata":{},"sourceType":"module"}