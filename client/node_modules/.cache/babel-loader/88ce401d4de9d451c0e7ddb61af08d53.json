{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport currentUser from \"./reducers/currentUser\";\nimport allQuestions from \"./reducers/allQuestions\";\nimport answerableQuestion from \"./reducers/answerableQuestion\";\nexport default combineReducers({\n  currentUser,\n  allQuestions,\n  answerableQuestion\n}); //because the keys and values are the same, ie.e currentUser: currentUser, allQuestions: allQuestions; we can use shorthand and just list them like we do above.\n//combineReducers takes an object, which is basically key:value pairs of all the other reducers that we have\n//reducer is passed a state and an action. Based on that, it will return some new state. It will likely update the global state inside the redux store","map":{"version":3,"sources":["/Users/johncross/Desktop/10xCodeCamp/ask-a-teacher-fullstack/client/src/store/combineReducers.js"],"names":["combineReducers","currentUser","allQuestions","answerableQuestion"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,kBAAP,MAA+B,+BAA/B;AAEA,eAAeH,eAAe,CAAC;AAC5BC,EAAAA,WAD4B;AAE5BC,EAAAA,YAF4B;AAG5BC,EAAAA;AAH4B,CAAD,CAA9B,C,CAMA;AAEA;AAEA","sourcesContent":["import { combineReducers } from \"redux\";\nimport currentUser from \"./reducers/currentUser\";\nimport allQuestions from \"./reducers/allQuestions\";\nimport answerableQuestion from \"./reducers/answerableQuestion\";\n\nexport default combineReducers({\n   currentUser,\n   allQuestions,\n   answerableQuestion,\n});\n\n//because the keys and values are the same, ie.e currentUser: currentUser, allQuestions: allQuestions; we can use shorthand and just list them like we do above.\n\n//combineReducers takes an object, which is basically key:value pairs of all the other reducers that we have\n\n//reducer is passed a state and an action. Based on that, it will return some new state. It will likely update the global state inside the redux store\n"]},"metadata":{},"sourceType":"module"}