{"ast":null,"code":"import actions from \"../actions\";\nexport default function answerableQuestion(answerableQuestion = {}, action) {\n  // action.payload, action.type\n  console.log(\"should this be firing already?\");\n  let newAnswerableQuestion = { ...answerableQuestion\n  };\n\n  switch (action.type) {\n    case actions.STORE_ANSWERABLE_QUESTION:\n      console.log(\"NOW INSIDE actions.STORE_ANSWERABLE_QUESTION\");\n      newAnswerableQuestion = action.payload.text; // newAnswerableQuestion.answers = action.payload.answers;\n\n      newAnswerableQuestion.prevRoute = action.payload.prevRoute; // newAnswerableQuestion.id = action.payload.id;\n      // newAnswerableQuestion.email = action.payload.email;\n      // newAnswerableQuestion.createdAt = action.payload.createdAt;\n\n      return newAnswerableQuestion;\n    //this will be an array of objects that will be stored inside our Redux store\n\n    default:\n      return answerableQuestion;\n  }\n}","map":{"version":3,"sources":["/Users/johncross/Desktop/10xCodeCamp/ask-a-teacher-fullstack/client/src/store/reducers/answerableQuestion.js"],"names":["actions","answerableQuestion","action","console","log","newAnswerableQuestion","type","STORE_ANSWERABLE_QUESTION","payload","text","prevRoute"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,YAApB;AAEA,eAAe,SAASC,kBAAT,CAA4BA,kBAAkB,GAAG,EAAjD,EAAqDC,MAArD,EAA6D;AACzE;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACA,MAAIC,qBAAqB,GAAG,EAAE,GAAGJ;AAAL,GAA5B;;AACA,UAAQC,MAAM,CAACI,IAAf;AACG,SAAKN,OAAO,CAACO,yBAAb;AACGJ,MAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACAC,MAAAA,qBAAqB,GAAGH,MAAM,CAACM,OAAP,CAAeC,IAAvC,CAFH,CAGG;;AACAJ,MAAAA,qBAAqB,CAACK,SAAtB,GAAkCR,MAAM,CAACM,OAAP,CAAeE,SAAjD,CAJH,CAKG;AACA;AACA;;AACA,aAAOL,qBAAP;AAA8B;;AACjC;AACG,aAAOJ,kBAAP;AAXN;AAaF","sourcesContent":["import actions from \"../actions\";\n\nexport default function answerableQuestion(answerableQuestion = {}, action) {\n   // action.payload, action.type\n   console.log(\"should this be firing already?\");\n   let newAnswerableQuestion = { ...answerableQuestion };\n   switch (action.type) {\n      case actions.STORE_ANSWERABLE_QUESTION:\n         console.log(\"NOW INSIDE actions.STORE_ANSWERABLE_QUESTION\");\n         newAnswerableQuestion = action.payload.text;\n         // newAnswerableQuestion.answers = action.payload.answers;\n         newAnswerableQuestion.prevRoute = action.payload.prevRoute;\n         // newAnswerableQuestion.id = action.payload.id;\n         // newAnswerableQuestion.email = action.payload.email;\n         // newAnswerableQuestion.createdAt = action.payload.createdAt;\n         return newAnswerableQuestion; //this will be an array of objects that will be stored inside our Redux store\n      default:\n         return answerableQuestion;\n   }\n}\n"]},"metadata":{},"sourceType":"module"}