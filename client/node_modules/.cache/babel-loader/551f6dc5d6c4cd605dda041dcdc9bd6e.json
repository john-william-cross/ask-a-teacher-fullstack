{"ast":null,"code":"var _jsxFileName = \"/Users/johncross/Desktop/10xCodeCamp/ask-a-teacher-fullstack/client/src/component/pages/SignUp.js\";\nimport React from \"react\";\nimport Header from \"../ui/Header\";\nimport Footer from \"../ui/Footer\";\nimport classnames from \"classnames\";\nimport hash from \"object-hash\";\nimport { v4 as getUuid } from \"uuid\";\nimport axios from \"axios\";\nimport actions from \"../../store/actions\";\nimport { connect } from \"react-redux\"; //functions go in react classes\n\nclass SignUp extends React.Component {\n  //we can set the state in constructor\n  constructor(props) {\n    super(props);\n    this.state = {\n      emailError: \"\",\n      passwordError: \"\",\n      hasEmailError: false,\n      hasPasswordError: false\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://raw.githubusercontent.com/john-william-cross/ask-a-teacher-mpa/master/src/mock-data/currentUser.json\").then(res => {\n      // handle success\n      const currentUser = res.data;\n      console.log(`currentUser: `, currentUser);\n      this.props.dispatch({\n        type: actions.UPDATE_CURRENT_USER,\n        payload: res.data\n      }); // this doesn't store user\n    }).catch(error => {\n      // handle error\n      console.log(error);\n    });\n  }\n\n  async setEmailState(emailInput) {\n    const lowerCasedEmailInput = emailInput.toLowerCase();\n    console.log(lowerCasedEmailInput); // eslint-disable-next-line\n\n    const emailRegex = /@nv.ccsd.net$/;\n    if (emailInput === \"\") this.setState({\n      emailError: \"Please enter your email address.\",\n      hasEmailError: true\n    });else if (emailRegex.test(lowerCasedEmailInput) === false) {\n      console.log(\"not a valid email\");\n      this.setState({\n        emailError: \"Please enter a valid email address.\",\n        hasEmailError: true\n      });\n    } else {\n      this.setState({\n        emailError: \"\",\n        hasEmailError: false\n      });\n    }\n  }\n\n  checkHasLocalPart(passwordInput, emailInput) {\n    const localPart = emailInput.split(\"@\")[0];\n    if (localPart === \"\") return false;else if (localPart.length < 4) return false;else return passwordInput.includes(localPart);\n  }\n\n  async setPasswordState(passwordInput, emailInput) {\n    console.log(passwordInput);\n    const uniqChars = [...new Set(passwordInput)];\n    console.log(uniqChars);\n\n    if (passwordInput === \"\") {\n      this.setState({\n        passwordError: \"Please create a password.\",\n        hasPasswordError: true\n      });\n    } else if (passwordInput.length < 9) {\n      this.setState({\n        passwordError: \"Your password must be at least 9 characters.\",\n        hasPasswordError: true\n      });\n    } else if (this.checkHasLocalPart(passwordInput, emailInput)) {\n      this.setState({\n        passwordError: \"For your safety, your password cannot contain your email address.\",\n        hasPasswordError: true\n      });\n    } else if (uniqChars.length < 3) {\n      this.setState({\n        passwordError: \"For your safety, your password must contain at least 3 unique characters.\",\n        hasPasswordError: true\n      });\n    } else {\n      this.setState({\n        passwordError: \"\",\n        hasPasswordError: false\n      });\n    }\n  }\n\n  async validateAndCreateUser() {\n    const emailInput = document.getElementById(\"signup-email-input\").value;\n    const passwordInput = document.getElementById(\"signup-password-input\").value;\n    await this.setEmailState(emailInput);\n    await this.setPasswordState(passwordInput, emailInput);\n\n    if (this.state.hasEmailError === false && this.state.hasPasswordError === false) {\n      const user = {\n        id: getUuid(),\n        email: emailInput,\n        password: hash(passwordInput),\n        createdAt: Date.now()\n      };\n      console.log(\"Created user object for POST: \", user); // Mimic API response:\n\n      axios.get(\"https://raw.githubusercontent.com/john-william-cross/ask-a-teacher-mpa/master/src/mock-data/currentUser.json\").then(res => {\n        // handle success\n        const currentUser = res.data;\n        console.log(`currentUser: `, currentUser);\n        this.props.dispatch({\n          type: actions.UPDATE_CURRENT_USER,\n          payload: res.data\n        }); // this doesn't store user\n      }).catch(error => {\n        // handle error\n        console.log(error);\n      }); //redirect the user\n\n      this.props.history.push(\"/questions\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-10 offset-md-1 col-lg-8 offset-lg-2 col-xl-8 offset-xl-2 mt-9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"email-and-create-password \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-center logo-text-font mt-n5 mt-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 25\n      }\n    }, \"Thanks for joining us!\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mt-7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 25\n      }\n    }, \"Enter your CCSD email\"), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"signup-email-input\",\n      className: classnames({\n        \"form-control\": true,\n        \"form-control-lg\": true,\n        \"is-invalid\": this.state.emailError\n      }),\n      type: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 28\n      }\n    }), this.state.hasEmailError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 31\n      }\n    }, this.state.emailError), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 28\n      }\n    }, \"Create a password\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-muted line-height-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 28\n      }\n    }, \"Password must be at least 9 characters\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"signup-password-input\",\n      className: classnames({\n        \"form-control\": true,\n        \"form-control-lg\": true,\n        \"is-invalid\": this.state.hasPasswordError\n      }),\n      type: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 28\n      }\n    }), this.state.hasPasswordError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 31\n      }\n    }, this.state.passwordError), /*#__PURE__*/React.createElement(\"button\", {\n      to: \"questions\",\n      id: \"lets-go-button\",\n      className: \"btn btn-outline-secondary logo-text-font lead sign-in mt-5 mb-9\",\n      onClick: () => {\n        this.validateAndCreateUser();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 28\n      }\n    }, \"Let's go!\")))))), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 13\n      }\n    }));\n  }\n\n} // export default withRouter(SignUp);\n// export default withRouter(LogIn);\n\n\nfunction mapStateToProps() {\n  //return whatever we want to pass from the global state into the properties\n  return {}; //we don't need any redux global state, but if we do we can grab it from redux global state and map it to this props for this component. Until then we'll return a blank object.\n}\n\nexport default connect(mapStateToProps)(SignUp);","map":{"version":3,"sources":["/Users/johncross/Desktop/10xCodeCamp/ask-a-teacher-fullstack/client/src/component/pages/SignUp.js"],"names":["React","Header","Footer","classnames","hash","v4","getUuid","axios","actions","connect","SignUp","Component","constructor","props","state","emailError","passwordError","hasEmailError","hasPasswordError","componentDidMount","get","then","res","currentUser","data","console","log","dispatch","type","UPDATE_CURRENT_USER","payload","catch","error","setEmailState","emailInput","lowerCasedEmailInput","toLowerCase","emailRegex","setState","test","checkHasLocalPart","passwordInput","localPart","split","length","includes","setPasswordState","uniqChars","Set","validateAndCreateUser","document","getElementById","value","user","id","email","password","createdAt","Date","now","history","push","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Header from \"../ui/Header\";\nimport Footer from \"../ui/Footer\";\n\nimport classnames from \"classnames\";\nimport hash from \"object-hash\";\nimport { v4 as getUuid } from \"uuid\";\nimport axios from \"axios\";\nimport actions from \"../../store/actions\";\nimport { connect } from \"react-redux\";\n\n//functions go in react classes\nclass SignUp extends React.Component {\n   //we can set the state in constructor\n   constructor(props) {\n      super(props);\n      this.state = {\n         emailError: \"\",\n         passwordError: \"\",\n         hasEmailError: false,\n         hasPasswordError: false,\n      };\n   }\n   componentDidMount() {\n      axios\n         .get(\n            \"https://raw.githubusercontent.com/john-william-cross/ask-a-teacher-mpa/master/src/mock-data/currentUser.json\"\n         )\n         .then((res) => {\n            // handle success\n            const currentUser = res.data;\n            console.log(`currentUser: `, currentUser);\n            this.props.dispatch({\n               type: actions.UPDATE_CURRENT_USER,\n               payload: res.data,\n            }); // this doesn't store user\n         })\n         .catch((error) => {\n            // handle error\n            console.log(error);\n         });\n   }\n\n   async setEmailState(emailInput) {\n      const lowerCasedEmailInput = emailInput.toLowerCase();\n      console.log(lowerCasedEmailInput);\n      // eslint-disable-next-line\n      const emailRegex = /@nv.ccsd.net$/;\n\n      if (emailInput === \"\")\n         this.setState({\n            emailError: \"Please enter your email address.\",\n            hasEmailError: true,\n         });\n      else if (emailRegex.test(lowerCasedEmailInput) === false) {\n         console.log(\"not a valid email\");\n         this.setState({\n            emailError: \"Please enter a valid email address.\",\n            hasEmailError: true,\n         });\n      } else {\n         this.setState({ emailError: \"\", hasEmailError: false });\n      }\n   }\n\n   checkHasLocalPart(passwordInput, emailInput) {\n      const localPart = emailInput.split(\"@\")[0];\n      if (localPart === \"\") return false;\n      else if (localPart.length < 4) return false;\n      else return passwordInput.includes(localPart);\n   }\n\n   async setPasswordState(passwordInput, emailInput) {\n      console.log(passwordInput);\n\n      const uniqChars = [...new Set(passwordInput)];\n      console.log(uniqChars);\n\n      if (passwordInput === \"\") {\n         this.setState({\n            passwordError: \"Please create a password.\",\n            hasPasswordError: true,\n         });\n      } else if (passwordInput.length < 9) {\n         this.setState({\n            passwordError: \"Your password must be at least 9 characters.\",\n            hasPasswordError: true,\n         });\n      } else if (this.checkHasLocalPart(passwordInput, emailInput)) {\n         this.setState({\n            passwordError:\n               \"For your safety, your password cannot contain your email address.\",\n            hasPasswordError: true,\n         });\n      } else if (uniqChars.length < 3) {\n         this.setState({\n            passwordError:\n               \"For your safety, your password must contain at least 3 unique characters.\",\n            hasPasswordError: true,\n         });\n      } else {\n         this.setState({ passwordError: \"\", hasPasswordError: false });\n      }\n   }\n\n   async validateAndCreateUser() {\n      const emailInput = document.getElementById(\"signup-email-input\").value;\n      const passwordInput = document.getElementById(\"signup-password-input\")\n         .value;\n      await this.setEmailState(emailInput);\n      await this.setPasswordState(passwordInput, emailInput);\n      if (\n         this.state.hasEmailError === false &&\n         this.state.hasPasswordError === false\n      ) {\n         const user = {\n            id: getUuid(),\n            email: emailInput,\n            password: hash(passwordInput),\n            createdAt: Date.now(),\n         };\n         console.log(\"Created user object for POST: \", user);\n\n         // Mimic API response:\n         axios\n            .get(\n               \"https://raw.githubusercontent.com/john-william-cross/ask-a-teacher-mpa/master/src/mock-data/currentUser.json\"\n            )\n            .then((res) => {\n               // handle success\n               const currentUser = res.data;\n               console.log(`currentUser: `, currentUser);\n               this.props.dispatch({\n                  type: actions.UPDATE_CURRENT_USER,\n                  payload: res.data,\n               }); // this doesn't store user\n            })\n            .catch((error) => {\n               // handle error\n               console.log(error);\n            });\n         //redirect the user\n         this.props.history.push(\"/questions\");\n      }\n   }\n\n   render() {\n      return (\n         <>\n            <Header />\n            <div className=\"container\">\n               <div className=\"row\">\n                  <div className=\"col-12 col-md-10 offset-md-1 col-lg-8 offset-lg-2 col-xl-8 offset-xl-2 mt-9\">\n                     <div className=\"email-and-create-password \">\n                        <h1 className=\"text-center logo-text-font mt-n5 mt-md-3\">\n                           Thanks for joining us!\n                        </h1>\n                        {/* <p className=\"mt-6\">Where do you teach?</p>\n                        <select className=\"col-5 form-control form-control-lg mb-5 mt-3\">\n                           <option value=\"AL\">Alabama</option>\n                           <option value=\"AK\">Alaska</option>\n                           <option value=\"AZ\">Arizona</option>\n                           <option value=\"AR\">Arkansas</option>\n                           <option value=\"CA\">California</option>\n                           <option value=\"CO\">Colorado</option>\n                           <option value=\"CT\">Connecticut</option>\n                           <option value=\"DE\">Delaware</option>\n                           <option value=\"DC\">District Of Columbia</option>\n                           <option value=\"FL\">Florida</option>\n                           <option value=\"GA\">Georgia</option>\n                           <option value=\"HI\">Hawaii</option>\n                           <option value=\"ID\">Idaho</option>\n                           <option value=\"IL\">Illinois</option>\n                           <option value=\"IN\">Indiana</option>\n                           <option value=\"IA\">Iowa</option>\n                           <option value=\"KS\">Kansas</option>\n                           <option value=\"KY\">Kentucky</option>\n                           <option value=\"LA\">Louisiana</option>\n                           <option value=\"ME\">Maine</option>\n                           <option value=\"MD\">Maryland</option>\n                           <option value=\"MA\">Massachusetts</option>\n                           <option value=\"MI\">Michigan</option>\n                           <option value=\"MN\">Minnesota</option>\n                           <option value=\"MS\">Mississippi</option>\n                           <option value=\"MO\">Missouri</option>\n                           <option value=\"MT\">Montana</option>\n                           <option value=\"NE\">Nebraska</option>\n                           <option value=\"NV\">Nevada</option>\n                           <option value=\"NH\">New Hampshire</option>\n                           <option value=\"NJ\">New Jersey</option>\n                           <option value=\"NM\">New Mexico</option>\n                           <option value=\"NY\">New York</option>\n                           <option value=\"NC\">North Carolina</option>\n                           <option value=\"ND\">North Dakota</option>\n                           <option value=\"OH\">Ohio</option>\n                           <option value=\"OK\">Oklahoma</option>\n                           <option value=\"OR\">Oregon</option>\n                           <option value=\"PA\">Pennsylvania</option>\n                           <option value=\"RI\">Rhode Island</option>\n                           <option value=\"SC\">South Carolina</option>\n                           <option value=\"SD\">South Dakota</option>\n                           <option value=\"TN\">Tennessee</option>\n                           <option value=\"TX\">Texas</option>\n                           <option value=\"UT\">Utah</option>\n                           <option value=\"VT\">Vermont</option>\n                           <option value=\"VA\">Virginia</option>\n                           <option value=\"WA\">Washington</option>\n                           <option value=\"WV\">West Virginia</option>\n                           <option value=\"WI\">Wisconsin</option>\n                           <option value=\"WY\">Wyoming</option>\n                        </select> */}\n                        <p className=\"mt-7\">Enter your CCSD email</p>\n                        <>\n                           <input\n                              id=\"signup-email-input\"\n                              className={classnames({\n                                 \"form-control\": true,\n                                 \"form-control-lg\": true,\n                                 \"is-invalid\": this.state.emailError,\n                              })}\n                              type=\"email\"\n                           />\n\n                           {this.state.hasEmailError && (\n                              <p className=\"text-danger\">\n                                 {this.state.emailError}\n                              </p>\n                           )}\n                           <p className=\"mt-5\">Create a password</p>\n                           <p className=\"text-muted line-height-0\">\n                              Password must be at least 9 characters\n                           </p>\n\n                           <input\n                              id=\"signup-password-input\"\n                              className={classnames({\n                                 \"form-control\": true,\n                                 \"form-control-lg\": true,\n                                 \"is-invalid\": this.state.hasPasswordError,\n                              })}\n                              type=\"password\"\n                           />\n                           {this.state.hasPasswordError && (\n                              <p className=\"text-danger\">\n                                 {this.state.passwordError}\n                              </p>\n                           )}\n                           <button\n                              to=\"questions\"\n                              id=\"lets-go-button\"\n                              className=\"btn btn-outline-secondary logo-text-font lead sign-in mt-5 mb-9\"\n                              onClick={() => {\n                                 this.validateAndCreateUser();\n                              }}\n                           >\n                              Let's go!\n                           </button>\n                        </>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <Footer />\n         </>\n      );\n   }\n}\n\n// export default withRouter(SignUp);\n\n// export default withRouter(LogIn);\nfunction mapStateToProps() {\n   //return whatever we want to pass from the global state into the properties\n   return {}; //we don't need any redux global state, but if we do we can grab it from redux global state and map it to this props for this component. Until then we'll return a blank object.\n}\n\nexport default connect(mapStateToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}