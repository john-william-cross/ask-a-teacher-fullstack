{"ast":null,"code":"var _jsxFileName = \"/Users/johncross/Desktop/10xCodeCamp/ask-a-teacher-fullstack/client/src/component/pages/LogIn.js\";\nimport React from \"react\";\nimport Header from \"../ui/Header\";\nimport Footer from \"../ui/Footer\";\nimport classnames from \"classnames\";\nimport hash from \"object-hash\";\nimport { v4 as getUuid } from \"uuid\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../store/actions\";\n\nclass LogIn extends React.Component {\n  //we can set the state in constructor\n  constructor(props) {\n    super(props); // console.log(\"In a new class component!\");\n\n    this.state = {\n      emailError: \"\",\n      passwordError: \"\",\n      hasEmailError: false,\n      hasPasswordError: false\n    };\n  }\n\n  async setEmailState(emailInput) {\n    const lowerCasedEmailInput = emailInput.toLowerCase();\n    console.log(lowerCasedEmailInput); // eslint-disable-next-line\n\n    const emailRegex = /@nv.ccsd.net$/;\n    if (emailInput === \"\") this.setState({\n      emailError: \"Please enter your email address.\",\n      hasEmailError: true\n    });else if (emailRegex.test(lowerCasedEmailInput) === false) {\n      console.log(\"not a valid email\");\n      this.setState({\n        emailError: \"Please enter a valid email address.\",\n        hasEmailError: true\n      });\n    } else {\n      this.setState({\n        emailError: \"\",\n        hasEmailError: false\n      });\n    }\n  }\n\n  async setPasswordState(passwordInput) {\n    console.log(passwordInput);\n\n    if (passwordInput === \"\") {\n      this.setState({\n        passwordError: \"Please enter your password.\",\n        hasPasswordError: true\n      });\n    } else {\n      this.setState({\n        passwordError: \"\",\n        hasPasswordError: false\n      });\n    }\n  }\n\n  async validateAndLogInUser() {\n    const emailInput = document.getElementById(\"login-email-input\").value;\n    const passwordInput = document.getElementById(\"login-password-input\").value;\n    console.log({\n      emailInput,\n      passwordInput\n    });\n    await this.setEmailState(emailInput);\n    await this.setPasswordState(passwordInput, emailInput);\n\n    if (this.state.hasEmailError === false && this.state.hasPasswordError === false) {\n      const user = {\n        //creating that user here\n        id: getUuid(),\n        email: emailInput,\n        password: hash(passwordInput),\n        createdAt: Date.now()\n      };\n      console.log(\"Created user object for POST: \", user); // Mimic API response:\n\n      axios.get(\"https://raw.githubusercontent.com/john-william-cross/ask-a-teacher-mpa/master/src/mock-data/currentUser.json\").then(res => {\n        // handle success\n        const currentUser = res.data;\n        console.log(`currentUser: `, currentUser);\n        this.props.dispatch({\n          type: actions.UPDATE_CURRENT_USER,\n          payload: res.data\n        }); // this doesn't store user\n      }).catch(error => {\n        // handle error\n        console.log(error);\n      }); //redirect the user\n\n      this.props.history.push(\"/questions\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, \" \", /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-10 offset-md-1 col-lg-8 offset-lg-2 col-xl-8 offset-xl-2 mt-9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"return-user-sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"logo-text-font text-center mb-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }, \"Welcome back!\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"login-email-input\",\n      className: classnames({\n        \"form-control\": true,\n        \"form-control-lg\": true,\n        \"is-invalid\": this.state.emailError\n      }),\n      type: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }), this.state.hasEmailError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 28\n      }\n    }, this.state.emailError), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"login-password-input\",\n      className: classnames({\n        \"form-control\": true,\n        \"form-control-lg\": true,\n        \"is-invalid\": this.state.hasPasswordError\n      }),\n      type: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }), this.state.hasPasswordError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 28\n      }\n    }, this.state.passwordError), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      to: \"questions\",\n      id: \"return-user-sign-in-button\",\n      className: \"btn btn-outline-secondary logo-text-font lead sign-in mt-5\",\n      onClick: () => {\n        this.validateAndLogInUser();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 28\n      }\n    }, \"Sign in\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center show-sign-up-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 28\n      }\n    }, \"First time here?\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"SignUp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 28\n      }\n    }, \"Sign up \")), \" \")))), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }));\n  }\n\n} // export default withRouter(LogIn);\n\n\nfunction mapStateToProps() {\n  //return whatever we want to pass from the global state into the properties\n  return {}; //we don't need any redux global state, but if we do we can grab it from redux global state and map it to this props for this component. Until then we'll return a blank object.\n}\n\nexport default connect(mapStateToProps)(LogIn);","map":{"version":3,"sources":["/Users/johncross/Desktop/10xCodeCamp/ask-a-teacher-fullstack/client/src/component/pages/LogIn.js"],"names":["React","Header","Footer","classnames","hash","v4","getUuid","Link","axios","connect","actions","LogIn","Component","constructor","props","state","emailError","passwordError","hasEmailError","hasPasswordError","setEmailState","emailInput","lowerCasedEmailInput","toLowerCase","console","log","emailRegex","setState","test","setPasswordState","passwordInput","validateAndLogInUser","document","getElementById","value","user","id","email","password","createdAt","Date","now","get","then","res","currentUser","data","dispatch","type","UPDATE_CURRENT_USER","payload","catch","error","history","push","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Header from \"../ui/Header\";\nimport Footer from \"../ui/Footer\";\n\nimport classnames from \"classnames\";\nimport hash from \"object-hash\";\nimport { v4 as getUuid } from \"uuid\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../store/actions\";\n\nclass LogIn extends React.Component {\n   //we can set the state in constructor\n   constructor(props) {\n      super(props);\n      // console.log(\"In a new class component!\");\n      this.state = {\n         emailError: \"\",\n         passwordError: \"\",\n         hasEmailError: false,\n         hasPasswordError: false,\n      };\n   }\n\n   async setEmailState(emailInput) {\n      const lowerCasedEmailInput = emailInput.toLowerCase();\n      console.log(lowerCasedEmailInput);\n\n      // eslint-disable-next-line\n      const emailRegex = /@nv.ccsd.net$/;\n\n      if (emailInput === \"\")\n         this.setState({\n            emailError: \"Please enter your email address.\",\n            hasEmailError: true,\n         });\n      else if (emailRegex.test(lowerCasedEmailInput) === false) {\n         console.log(\"not a valid email\");\n         this.setState({\n            emailError: \"Please enter a valid email address.\",\n            hasEmailError: true,\n         });\n      } else {\n         this.setState({ emailError: \"\", hasEmailError: false });\n      }\n   }\n\n   async setPasswordState(passwordInput) {\n      console.log(passwordInput);\n\n      if (passwordInput === \"\") {\n         this.setState({\n            passwordError: \"Please enter your password.\",\n            hasPasswordError: true,\n         });\n      } else {\n         this.setState({ passwordError: \"\", hasPasswordError: false });\n      }\n   }\n\n   async validateAndLogInUser() {\n      const emailInput = document.getElementById(\"login-email-input\").value;\n      const passwordInput = document.getElementById(\"login-password-input\")\n         .value;\n      console.log({ emailInput, passwordInput });\n      await this.setEmailState(emailInput);\n      await this.setPasswordState(passwordInput, emailInput);\n      if (\n         this.state.hasEmailError === false &&\n         this.state.hasPasswordError === false\n      ) {\n         const user = {\n            //creating that user here\n            id: getUuid(),\n            email: emailInput,\n            password: hash(passwordInput),\n            createdAt: Date.now(),\n         };\n         console.log(\"Created user object for POST: \", user);\n         // Mimic API response:\n         axios\n            .get(\n               \"https://raw.githubusercontent.com/john-william-cross/ask-a-teacher-mpa/master/src/mock-data/currentUser.json\"\n            )\n            .then((res) => {\n               // handle success\n               const currentUser = res.data;\n               console.log(`currentUser: `, currentUser);\n               this.props.dispatch({\n                  type: actions.UPDATE_CURRENT_USER,\n                  payload: res.data,\n               }); // this doesn't store user\n            })\n            .catch((error) => {\n               // handle error\n               console.log(error);\n            });\n         //redirect the user\n         this.props.history.push(\"/questions\");\n      }\n   }\n\n   render() {\n      return (\n         <>\n            {\" \"}\n            <Header />\n            <div className=\"container\">\n               <div className=\"row\">\n                  <div className=\"col-12 col-md-10 offset-md-1 col-lg-8 offset-lg-2 col-xl-8 offset-xl-2 mt-9\">\n                     <div className=\"return-user-sign-in\">\n                        <h1 className=\"logo-text-font text-center mb-6\">\n                           Welcome back!\n                        </h1>\n                        <p className=\"mt-2\">Email</p>\n                        <input\n                           id=\"login-email-input\"\n                           className={classnames({\n                              \"form-control\": true,\n                              \"form-control-lg\": true,\n                              \"is-invalid\": this.state.emailError,\n                           })}\n                           type=\"email\"\n                        />\n                        {this.state.hasEmailError && (\n                           <p className=\"text-danger\">\n                              {this.state.emailError}\n                           </p>\n                        )}\n                        <p className=\"mt-2\">Password</p>\n                        <input\n                           id=\"login-password-input\"\n                           className={classnames({\n                              \"form-control\": true,\n                              \"form-control-lg\": true,\n                              \"is-invalid\": this.state.hasPasswordError,\n                           })}\n                           type=\"password\"\n                        />\n                        {this.state.hasPasswordError && (\n                           <p className=\"text-danger\">\n                              {this.state.passwordError}\n                           </p>\n                        )}\n                        <p className=\"text-muted\">\n                           <button\n                              to=\"questions\"\n                              id=\"return-user-sign-in-button\"\n                              className=\"btn btn-outline-secondary logo-text-font lead sign-in mt-5\"\n                              onClick={() => {\n                                 this.validateAndLogInUser();\n                              }}\n                           >\n                              Sign in\n                           </button>\n                        </p>\n                        <div className=\"text-center show-sign-up-info\">\n                           <p>First time here?</p>\n                           <Link to=\"SignUp\">Sign up </Link>\n                        </div>{\" \"}\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <Footer />\n         </>\n      );\n   }\n}\n\n// export default withRouter(LogIn);\nfunction mapStateToProps() {\n   //return whatever we want to pass from the global state into the properties\n   return {}; //we don't need any redux global state, but if we do we can grab it from redux global state and map it to this props for this component. Until then we'll return a blank object.\n}\n\nexport default connect(mapStateToProps)(LogIn);\n"]},"metadata":{},"sourceType":"module"}